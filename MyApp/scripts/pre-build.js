//Generates a static list of .html files in _parcel-links.html for parcel to manage

var fs = require("fs");
var path = require("path");

var srcDir = path.resolve(__dirname, "../src");
var wwwrootDir = path.resolve(__dirname, "../wwwroot");

function walk(dir, ext) {
  var results = [];
  var list = fs.readdirSync(dir);
  list.forEach(file => {
    file = path.join(dir, file);
    var stat = fs.statSync(file);
    if (stat && stat.isDirectory()) {
      results = results.concat(walk(file, ext));
    } else if (file.endsWith(ext)) {
      results.push(file);
    }
  });
  return results;
}

function rmDir(dirPath, removeSelf) {
  try {
    var files = fs.readdirSync(dirPath);
  } catch (e) {
    return;
  }
  if (files.length > 0) {
    for (var i = 0; i < files.length; i++) {
      var filePath = dirPath + "/" + files[i];
      if (fs.statSync(filePath).isFile()) {
        fs.unlinkSync(filePath);
      } else {
        rmDir(filePath, true);
      }
    }
  }
  if (removeSelf) {
    fs.rmdirSync(dirPath);
  }
}

rmDir(wwwrootDir);

var results = walk(srcDir, ".html");

var sb = "<!-- generated by scripts/pre-build.js -->\n\n";
results.forEach(filePath => {
  var relativePath = filePath.substring(srcDir.length + 1);
  sb += `<a href="${relativePath}"></a>\n`;
});

var toFile = path.join(srcDir, "_parcel-links.html");
fs.writeFileSync(toFile, sb);
